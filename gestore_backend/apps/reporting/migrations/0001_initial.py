# Generated by Django 5.2.6 on 2025-09-27 07:51

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('name', models.CharField(help_text='Nom ou désignation', max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description détaillée (optionnelle)', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si cet élément est actif', verbose_name='Actif')),
                ('kpi_type', models.CharField(choices=[('sales', 'Ventes'), ('inventory', 'Stock'), ('financial', 'Financier'), ('customer', 'Client'), ('operational', 'Opérationnel')], max_length=20, verbose_name='Type de KPI')),
                ('data_type', models.CharField(choices=[('number', 'Nombre'), ('percentage', 'Pourcentage'), ('currency', 'Devise'), ('ratio', 'Ratio')], default='number', max_length=20, verbose_name='Type de données')),
                ('calculation_method', models.TextField(help_text='Description ou formule de calcul du KPI', verbose_name='Méthode de calcul')),
                ('sql_query', models.TextField(blank=True, help_text='Requête pour calculer la valeur du KPI', verbose_name='Requête SQL')),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valeur cible')),
                ('min_acceptable', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Minimum acceptable')),
                ('max_acceptable', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Maximum acceptable')),
                ('calculation_frequency', models.CharField(choices=[('realtime', 'Temps réel'), ('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel')], default='daily', max_length=20, verbose_name='Fréquence de calcul')),
                ('unit', models.CharField(blank=True, help_text="Unité d'affichage (€, %, kg, etc.)", max_length=20, verbose_name='Unité')),
                ('decimal_places', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='Nombre de décimales')),
                ('color_good', models.CharField(default='#28a745', max_length=7, verbose_name='Couleur bon')),
                ('color_warning', models.CharField(default='#ffc107', max_length=7, verbose_name='Couleur avertissement')),
                ('color_danger', models.CharField(default='#dc3545', max_length=7, verbose_name='Couleur danger')),
            ],
            options={
                'verbose_name': 'KPI',
                'verbose_name_plural': 'KPIs',
                'db_table': 'reporting_kpi',
                'ordering': ['kpi_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('name', models.CharField(help_text='Nom ou désignation', max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description détaillée (optionnelle)', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si cet élément est actif', verbose_name='Actif')),
                ('icon', models.CharField(blank=True, help_text="Nom de l'icône pour l'interface", max_length=50, verbose_name='Icône')),
                ('color', models.CharField(default='#007bff', help_text="Couleur d'affichage (format hexadécimal)", max_length=7, verbose_name='Couleur')),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Catégorie de rapport',
                'verbose_name_plural': 'Catégories de rapport',
                'db_table': 'reporting_category',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('name', models.CharField(help_text='Nom ou désignation', max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description détaillée (optionnelle)', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si cet élément est actif', verbose_name='Actif')),
                ('dashboard_type', models.CharField(choices=[('personal', 'Personnel'), ('role_based', 'Basé sur le rôle'), ('public', 'Public'), ('admin', 'Administration')], default='personal', max_length=20, verbose_name='Type de tableau de bord')),
                ('layout', models.JSONField(default=dict, help_text='Configuration de la mise en page et des widgets', verbose_name='Configuration layout')),
                ('refresh_interval', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(30)], verbose_name='Intervalle de rafraîchissement (secondes)')),
                ('is_default', models.BooleanField(default=False, verbose_name='Tableau de bord par défaut')),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('shared_with', models.ManyToManyField(blank=True, related_name='accessible_dashboards', to=settings.AUTH_USER_MODEL, verbose_name='Partagé avec')),
                ('target_role', models.ForeignKey(blank=True, help_text='Rôle pour lequel ce tableau de bord est conçu', null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.role', verbose_name='Rôle cible')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Tableau de bord',
                'verbose_name_plural': 'Tableaux de bord',
                'db_table': 'reporting_dashboard',
                'ordering': ['dashboard_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('title', models.CharField(max_length=100, verbose_name='Titre du widget')),
                ('widget_type', models.CharField(choices=[('metric', 'Métrique simple'), ('chart', 'Graphique'), ('table', 'Tableau'), ('gauge', 'Jauge'), ('progress', 'Barre de progression'), ('list', 'Liste'), ('alert', 'Alerte')], max_length=20, verbose_name='Type de widget')),
                ('position_x', models.IntegerField(default=0, verbose_name='Position X')),
                ('position_y', models.IntegerField(default=0, verbose_name='Position Y')),
                ('width', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Largeur (colonnes)')),
                ('height', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Hauteur (lignes)')),
                ('config', models.JSONField(default=dict, verbose_name='Configuration du widget')),
                ('data_source', models.CharField(max_length=100, verbose_name='Source de données')),
                ('query_parameters', models.JSONField(blank=True, default=dict, verbose_name='Paramètres de requête')),
                ('last_updated', models.DateTimeField(blank=True, null=True, verbose_name='Dernière mise à jour')),
                ('cached_data', models.JSONField(blank=True, default=dict, verbose_name='Données en cache')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='reporting.dashboard', verbose_name='Tableau de bord')),
            ],
            options={
                'verbose_name': 'Widget de tableau de bord',
                'verbose_name_plural': 'Widgets de tableau de bord',
                'db_table': 'reporting_dashboard_widget',
                'ordering': ['dashboard', 'position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du rapport')),
                ('status', models.CharField(choices=[('generating', 'En cours de génération'), ('completed', 'Terminé'), ('failed', 'Échoué'), ('expired', 'Expiré')], default='generating', max_length=20, verbose_name='Statut')),
                ('parameters_used', models.JSONField(default=dict, help_text='Paramètres utilisés pour générer ce rapport', verbose_name='Paramètres utilisés')),
                ('date_from', models.DateField(blank=True, null=True, verbose_name='Date de début')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('data', models.JSONField(blank=True, default=dict, help_text='Données générées pour ce rapport', verbose_name='Données du rapport')),
                ('summary', models.JSONField(blank=True, default=dict, help_text='Métriques et résumés calculés', verbose_name='Résumé')),
                ('generation_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Génération démarrée à')),
                ('generation_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Génération terminée à')),
                ('generation_duration', models.DurationField(blank=True, null=True, verbose_name='Durée de génération')),
                ('error_message', models.TextField(blank=True, verbose_name="Message d'erreur")),
                ('is_shared', models.BooleanField(default=False, verbose_name='Rapport partagé')),
                ('exported_at', models.DateTimeField(blank=True, null=True, verbose_name='Exporté le')),
                ('export_format', models.CharField(blank=True, max_length=10, verbose_name="Format d'export")),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_reports', to=settings.AUTH_USER_MODEL, verbose_name='Partagé avec')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Rapport généré',
                'verbose_name_plural': 'Rapports générés',
                'db_table': 'reporting_report',
                'ordering': ['-generation_completed_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportExport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel (XLSX)'), ('csv', 'CSV'), ('json', 'JSON'), ('html', 'HTML')], max_length=10, verbose_name='Format')),
                ('status', models.CharField(choices=[('processing', 'En cours'), ('completed', 'Terminé'), ('failed', 'Échoué')], default='processing', max_length=20, verbose_name='Statut')),
                ('file_path', models.CharField(blank=True, max_length=255, verbose_name='Chemin du fichier')),
                ('file_size', models.BigIntegerField(blank=True, null=True, verbose_name='Taille du fichier (octets)')),
                ('download_count', models.IntegerField(default=0, verbose_name='Nombre de téléchargements')),
                ('auto_delete_after_days', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Suppression automatique (jours)')),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='reporting.report', verbose_name='Rapport')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Export de rapport',
                'verbose_name_plural': 'Exports de rapport',
                'db_table': 'reporting_export',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('name', models.CharField(help_text='Nom ou désignation', max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description détaillée (optionnelle)', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si cet élément est actif', verbose_name='Actif')),
                ('report_type', models.CharField(choices=[('table', 'Tableau'), ('chart', 'Graphique'), ('dashboard', 'Tableau de bord'), ('export', 'Export de données'), ('summary', 'Résumé')], max_length=20, verbose_name='Type de rapport')),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Ligne'), ('bar', 'Barres'), ('pie', 'Secteurs'), ('area', 'Aires'), ('scatter', 'Nuage de points'), ('donut', 'Donut')], max_length=20, null=True, verbose_name='Type de graphique')),
                ('sql_query', models.TextField(blank=True, help_text='Requête SQL personnalisée pour générer les données', verbose_name='Requête SQL')),
                ('data_source', models.CharField(blank=True, help_text='Nom de la vue ou fonction qui génère les données', max_length=100, verbose_name='Source de données')),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Paramètres configurables du rapport (filtres, dates, etc.)', verbose_name='Paramètres')),
                ('layout_config', models.JSONField(blank=True, default=dict, help_text='Configuration de mise en page et style', verbose_name='Configuration layout')),
                ('auto_generate', models.BooleanField(default=False, verbose_name='Génération automatique')),
                ('frequency', models.CharField(choices=[('manual', 'Manuel'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='manual', max_length=20, verbose_name='Fréquence de génération')),
                ('is_public', models.BooleanField(default=False, help_text='Accessible à tous les utilisateurs autorisés', verbose_name='Rapport public')),
                ('tags', models.JSONField(blank=True, default=list, help_text="Tags pour la recherche et l'organisation", verbose_name='Tags')),
                ('allowed_roles', models.ManyToManyField(blank=True, to='authentication.role', verbose_name='Rôles autorisés')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.reportcategory', verbose_name='Catégorie')),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Modèle de rapport',
                'verbose_name_plural': 'Modèles de rapport',
                'db_table': 'reporting_template',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.AddField(
            model_name='report',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='generated_reports', to='reporting.reporttemplate', verbose_name='Modèle de rapport'),
        ),
        migrations.CreateModel(
            name='ScheduledReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('schedule_type', models.CharField(choices=[('interval', 'Intervalle'), ('cron', 'Expression cron'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel')], max_length=20, verbose_name='Type de programmation')),
                ('cron_expression', models.CharField(blank=True, help_text='Expression cron pour la programmation (ex: 0 9 * * 1 pour chaque lundi à 9h)', max_length=50, verbose_name='Expression cron')),
                ('interval_minutes', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(5)], verbose_name='Intervalle en minutes')),
                ('run_time', models.TimeField(blank=True, help_text="Heure d'exécution pour les rapports quotidiens/hebdomadaires/mensuels", null=True, verbose_name="Heure d'exécution")),
                ('weekdays', models.JSONField(blank=True, default=list, help_text='Liste des jours (0=lundi, 6=dimanche)', verbose_name='Jours de la semaine')),
                ('day_of_month', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='Jour du mois')),
                ('default_parameters', models.JSONField(blank=True, default=dict, verbose_name='Paramètres par défaut')),
                ('email_enabled', models.BooleanField(default=False, verbose_name='Envoi par email')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Activé')),
                ('last_run', models.DateTimeField(blank=True, null=True, verbose_name='Dernière exécution')),
                ('next_run', models.DateTimeField(blank=True, null=True, verbose_name='Prochaine exécution')),
                ('run_count', models.IntegerField(default=0, verbose_name="Nombre d'exécutions")),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('recipients', models.ManyToManyField(blank=True, help_text='Utilisateurs qui recevront le rapport automatiquement', to=settings.AUTH_USER_MODEL, verbose_name='Destinataires')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reporting.reporttemplate', verbose_name='Modèle de rapport')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Rapport programmé',
                'verbose_name_plural': 'Rapports programmés',
                'db_table': 'reporting_scheduled_report',
                'ordering': ['next_run'],
            },
        ),
        migrations.CreateModel(
            name='KPIValue',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('value', models.DecimalField(decimal_places=6, max_digits=15, verbose_name='Valeur')),
                ('period_start', models.DateTimeField(verbose_name='Début de période')),
                ('period_end', models.DateTimeField(verbose_name='Fin de période')),
                ('context', models.JSONField(blank=True, default=dict, help_text='Données contextuelles utilisées pour le calcul', verbose_name='Contexte')),
                ('previous_value', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True, verbose_name='Valeur précédente')),
                ('change_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Pourcentage de changement')),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='reporting.kpi', verbose_name='KPI')),
            ],
            options={
                'verbose_name': 'Valeur KPI',
                'verbose_name_plural': 'Valeurs KPI',
                'db_table': 'reporting_kpi_value',
                'ordering': ['-period_end'],
                'unique_together': {('kpi', 'period_start', 'period_end')},
            },
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['template', 'status'], name='reporting_r_templat_a81a04_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['created_by', 'created_at'], name='reporting_r_created_c78955_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['date_from', 'date_to'], name='reporting_r_date_fr_3af4a7_idx'),
        ),
    ]
