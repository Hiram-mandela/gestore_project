# Generated by Django 5.2.6 on 2025-09-27 07:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupplierCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('name', models.CharField(help_text='Nom ou désignation', max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description détaillée (optionnelle)', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si cet élément est actif', verbose_name='Actif')),
                ('color', models.CharField(default='#007bff', help_text="Couleur d'affichage (format hexadécimal)", max_length=7, verbose_name='Couleur')),
            ],
            options={
                'verbose_name': 'Catégorie fournisseur',
                'verbose_name_plural': 'Catégories fournisseur',
                'db_table': 'suppliers_category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('order_number', models.CharField(help_text='Numéro unique généré automatiquement', max_length=30, unique=True, verbose_name='Numéro de commande')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyée'), ('confirmed', 'Confirmée'), ('partially_received', 'Partiellement reçue'), ('received', 'Reçue'), ('cancelled', 'Annulée'), ('closed', 'Clôturée')], default='draft', max_length=20, verbose_name='Statut')),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de commande')),
                ('expected_delivery_date', models.DateField(blank=True, null=True, verbose_name='Date de livraison prévue')),
                ('supplier_order_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro commande fournisseur')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Sous-total HT')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Montant remise')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Montant TVA')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Frais de port')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Montant total TTC')),
                ('notes', models.TextField(blank=True, verbose_name='Notes internes')),
                ('delivery_instructions', models.TextField(blank=True, verbose_name='Instructions de livraison')),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Commande fournisseur',
                'verbose_name_plural': 'Commandes fournisseur',
                'db_table': 'suppliers_purchase_order',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('delivery_number', models.CharField(max_length=30, unique=True, verbose_name='Numéro de livraison')),
                ('supplier_delivery_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro livraison fournisseur')),
                ('carrier', models.CharField(blank=True, max_length=100, verbose_name='Transporteur')),
                ('tracking_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro de suivi')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('in_transit', 'En transit'), ('delivered', 'Livrée'), ('partially_received', 'Partiellement réceptionnée'), ('received', 'Réceptionnée'), ('rejected', 'Refusée')], default='pending', max_length=20, verbose_name='Statut')),
                ('shipped_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'expédition")),
                ('delivered_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de livraison')),
                ('received_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de réception')),
                ('delivery_notes', models.TextField(blank=True, verbose_name='Notes de livraison')),
                ('reception_notes', models.TextField(blank=True, verbose_name='Notes de réception')),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_deliveries', to=settings.AUTH_USER_MODEL, verbose_name='Réceptionné par')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deliveries', to='suppliers.purchaseorder', verbose_name='Commande')),
            ],
            options={
                'verbose_name': 'Livraison',
                'verbose_name_plural': 'Livraisons',
                'db_table': 'suppliers_delivery',
                'ordering': ['-delivered_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('article_name', models.CharField(max_length=200, verbose_name='Nom article')),
                ('supplier_reference', models.CharField(blank=True, max_length=50, verbose_name='Référence fournisseur')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0.001)], verbose_name='Quantité commandée')),
                ('quantity_received', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='Quantité reçue')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix unitaire')),
                ('line_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Total ligne')),
                ('expected_date', models.DateField(blank=True, null=True, verbose_name='Date prévue')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.article', verbose_name='Article')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='suppliers.purchaseorder', verbose_name='Commande')),
            ],
            options={
                'verbose_name': 'Ligne commande fournisseur',
                'verbose_name_plural': 'Lignes commande fournisseur',
                'db_table': 'suppliers_purchase_order_item',
                'ordering': ['purchase_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('quantity_delivered', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantité livrée')),
                ('quantity_accepted', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantité acceptée')),
                ('quantity_rejected', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='Quantité refusée')),
                ('lot_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro de lot')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Date de péremption')),
                ('quality_check_passed', models.BooleanField(default=True, verbose_name='Contrôle qualité OK')),
                ('rejection_reason', models.TextField(blank=True, verbose_name='Motif de refus')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='suppliers.delivery', verbose_name='Livraison')),
                ('purchase_order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='suppliers.purchaseorderitem', verbose_name='Ligne de commande')),
            ],
            options={
                'verbose_name': 'Article livré',
                'verbose_name_plural': 'Articles livrés',
                'db_table': 'suppliers_delivery_item',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('code', models.CharField(help_text='Code unique identifiant cet élément', max_length=50, unique=True, verbose_name='Code')),
                ('name', models.CharField(help_text='Nom ou désignation', max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description détaillée (optionnelle)', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si cet élément est actif', verbose_name='Actif')),
                ('supplier_type', models.CharField(choices=[('manufacturer', 'Fabricant'), ('distributor', 'Distributeur'), ('wholesaler', 'Grossiste'), ('dropshipper', 'Dropshipper'), ('service', 'Prestataire de service')], default='distributor', max_length=20, verbose_name='Type de fournisseur')),
                ('legal_name', models.CharField(max_length=200, verbose_name='Raison sociale')),
                ('tax_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro fiscal/TVA')),
                ('registration_number', models.CharField(blank=True, max_length=50, verbose_name="Numéro d'enregistrement")),
                ('address', models.TextField(verbose_name='Adresse')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Code postal')),
                ('country', models.CharField(default="Côte d'Ivoire", max_length=50, verbose_name='Pays')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone principal')),
                ('fax', models.CharField(blank=True, max_length=20, verbose_name='Fax')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='Email principal')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('primary_contact', models.CharField(max_length=100, verbose_name='Contact principal')),
                ('primary_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone contact principal')),
                ('primary_contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Email contact principal')),
                ('sales_contact', models.CharField(blank=True, max_length=100, verbose_name='Contact commercial')),
                ('sales_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone commercial')),
                ('sales_contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Email commercial')),
                ('payment_terms', models.CharField(choices=[('immediate', 'Comptant'), ('net_15', 'Net 15 jours'), ('net_30', 'Net 30 jours'), ('net_45', 'Net 45 jours'), ('net_60', 'Net 60 jours'), ('net_90', 'Net 90 jours')], default='net_30', max_length=20, verbose_name='Conditions de paiement')),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Limite de crédit')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Remise générale (%)')),
                ('minimum_order_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Montant minimum de commande')),
                ('lead_time_days', models.IntegerField(default=7, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Délai de livraison (jours)')),
                ('rating', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(5)], verbose_name='Note (0-5 étoiles)')),
                ('total_orders', models.IntegerField(default=0, verbose_name='Nombre total de commandes')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Montant total des achats')),
                ('last_order_date', models.DateTimeField(blank=True, null=True, verbose_name='Dernière commande')),
                ('auto_order_enabled', models.BooleanField(default=False, help_text='Activer la génération automatique de commandes', verbose_name='Commandes automatiques')),
                ('preferred_order_day', models.IntegerField(blank=True, choices=[(0, 'Lundi'), (1, 'Mardi'), (2, 'Mercredi'), (3, 'Jeudi'), (4, 'Vendredi'), (5, 'Samedi'), (6, 'Dimanche')], null=True, verbose_name='Jour de commande préféré')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='suppliers/logos/', verbose_name='Logo')),
                ('notes', models.TextField(blank=True, verbose_name='Notes internes')),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cet enregistrement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a modifié cet enregistrement en dernier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='suppliers.suppliercategory', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Fournisseur',
                'verbose_name_plural': 'Fournisseurs',
                'db_table': 'suppliers_supplier',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='suppliers.supplier', verbose_name='Fournisseur'),
        ),
        migrations.CreateModel(
            name='SupplierArticle',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création automatique', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de dernière modification automatique', verbose_name='Date de modification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant UUID unique généré automatiquement', primary_key=True, serialize=False, verbose_name='Identifiant unique')),
                ('is_deleted', models.BooleanField(default=False, help_text="Marque l'enregistrement comme supprimé sans le supprimer physiquement", verbose_name='Supprimé')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date et heure de suppression logique', null=True, verbose_name='Date de suppression')),
                ('sync_status', models.CharField(choices=[('synced', 'Synchronisé'), ('pending', 'En attente de synchronisation'), ('conflict', 'Conflit de synchronisation'), ('error', 'Erreur de synchronisation')], default='pending', help_text='État de synchronisation avec la base distante', max_length=20, verbose_name='Statut de synchronisation')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Date et heure de dernière synchronisation réussie', null=True, verbose_name='Dernière synchronisation')),
                ('sync_hash', models.CharField(blank=True, help_text='Hash MD5 des données pour détecter les modifications', max_length=64, verbose_name='Hash de synchronisation')),
                ('supplier_reference', models.CharField(max_length=50, verbose_name='Référence fournisseur')),
                ('supplier_barcode', models.CharField(blank=True, max_length=50, verbose_name='Code-barres fournisseur')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Prix d'achat")),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Remise spécifique (%)')),
                ('minimum_quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité minimum')),
                ('package_quantity', models.IntegerField(default=1, help_text="Nombre d'unités dans un colis fournisseur", validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité par colis')),
                ('is_preferred', models.BooleanField(default=False, help_text='Fournisseur préféré pour cet article', verbose_name='Fournisseur préféré')),
                ('priority', models.IntegerField(default=1, help_text='1 = priorité maximale', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Priorité')),
                ('lead_time_days', models.IntegerField(blank=True, help_text='Délai spécifique pour cet article (sinon délai général du fournisseur)', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Délai spécifique (jours)')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible chez le fournisseur')),
                ('discontinued', models.BooleanField(default=False, verbose_name='Arrêté par le fournisseur')),
                ('last_price_update', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour prix')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='inventory.article', verbose_name='Article')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='suppliers.supplier', verbose_name='Fournisseur')),
            ],
            options={
                'verbose_name': 'Article fournisseur',
                'verbose_name_plural': 'Articles fournisseur',
                'db_table': 'suppliers_supplier_article',
                'ordering': ['supplier__name', 'article__name'],
            },
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['order_number'], name='suppliers_p_order_n_4def96_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['supplier', 'order_date'], name='suppliers_p_supplie_8824ad_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['status'], name='suppliers_p_status_039b4b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='supplierarticle',
            unique_together={('supplier', 'article')},
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['code'], name='suppliers_s_code_d1984e_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['is_active', 'name'], name='suppliers_s_is_acti_cbfb73_idx'),
        ),
    ]
