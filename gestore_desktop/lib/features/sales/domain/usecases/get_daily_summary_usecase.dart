// ========================================
// lib/features/sales/domain/usecases/get_daily_summary_usecase.dart
// Use case pour r√©cup√©rer le r√©sum√© quotidien
// ========================================

import 'package:injectable/injectable.dart';
import 'package:logger/logger.dart';

import '../repositories/sales_repository.dart';

@lazySingleton
class GetDailySummaryUseCase {
  final SalesRepository repository;
  final Logger logger;

  GetDailySummaryUseCase({
    required this.repository,
    required this.logger,
  });

  Future<(Map<String, dynamic>?, String?)> call() async {
    try {
      logger.d('üìä UseCase: R√©cup√©ration r√©sum√© quotidien');
      return await repository.getDailySummary();
    } catch (e) {
      logger.e('‚ùå UseCase: Erreur r√©cup√©ration r√©sum√©: $e');
      return (null, 'Erreur lors de la r√©cup√©ration du r√©sum√©');
    }
  }
}